package main

import (
	"flag"
	log "github.com/sirupsen/logrus"
)

const taskDescr = `Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

`

func main() {
	log.Info("START")
	log.Info(taskDescr)
	var max int64
	flag.Int64Var(&max, "max", 100, "max value")
	flag.Parse()
	log.Infof("The sum of even term of fibonacci sequence lesser than %d is %d", max, SumEven(Fibb(max)))
	log.Info("STOP")
}

func Fibb(max int64) []int64 {
	fibb := []int64{}
	var a, b, c int64 = 1, 1, 0
	fibb = append(fibb, 1)
	for {
		c = a + b
		if c >= max {
			break
		}
		a, b = b, c
		fibb = append(fibb, c)
	}
	return fibb
}

func SumEven(values []int64) int64 {
	var sum int64 = 0
	for i := 1; i < len(values); i += 3 {
		sum += values[i]
	}
	return sum
}
